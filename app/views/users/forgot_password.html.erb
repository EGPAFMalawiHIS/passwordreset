<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Password Reset Portal</title>
    <script src="https://cdn.tailwindcss.com"></script>
</head>
<body>
    <div class="flex h-screen overflow-hidden">
        <!-- Left side - Teal background with features -->
        <div class="w-1/2 bg-[#428076] text-white p-12 flex flex-col justify-center">
            <h1 class="text-4xl font-bold mb-16">Password Reset Portal</h1>
            
            <div class="space-y-8">
                <div class="flex items-center space-x-4">
                    <div class="bg-teal-600/50 p-3 rounded-full">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z" />
                        </svg>
                    </div>
                    <span class="text-xl">Secure password reset management</span>
                </div>
                
                <div class="flex items-center space-x-4">
                    <div class="bg-teal-600/50 p-3 rounded-full">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z" />
                        </svg>
                    </div>
                    <span class="text-xl">Multi-factor verification</span>
                </div>
                
                <div class="flex items-center space-x-4">
                    <div class="bg-teal-600/50 p-3 rounded-full">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
                        </svg>
                    </div>
                    <span class="text-xl">Secure verification process</span>
                </div>
                
                <div class="flex items-center space-x-4">
                    <div class="bg-teal-600/50 p-3 rounded-full">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2" />
                        </svg>
                    </div>
                    <span class="text-xl">Step-by-step verification</span>
                </div>
            </div>
        </div>
        
        <!-- Right side - White background with reset form -->
        <div class="w-1/2 bg-white flex items-center justify-center p-8">
            <div class="w-full max-w-md">
                <div class="bg-white rounded-lg p-8 shadow-sm border border-gray-100">
                    <!-- Progress indicator -->
                    <div class="flex items-center justify-center mb-8">
                        <div class="flex items-center space-x-4">
                            <div id="step1-indicator" class="flex items-center justify-center w-8 h-8 rounded-full bg-teal-600 text-white font-semibold">1</div>
                            <div class="w-12 h-0.5 bg-gray-300" id="connector1"></div>
                            <div id="step2-indicator" class="flex items-center justify-center w-8 h-8 rounded-full bg-gray-300 text-gray-600 font-semibold">2</div>
                            <div class="w-12 h-0.5 bg-gray-300" id="connector2"></div>
                            <div id="step3-indicator" class="flex items-center justify-center w-8 h-8 rounded-full bg-gray-300 text-gray-600 font-semibold">3</div>
                        </div>
                    </div>

                    <!-- Error display -->
                    <div id="error-message" class="hidden bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4" role="alert">
                        <strong class="font-bold">Error:</strong>
                        <span id="error-text"></span>
                    </div>

                    <!-- Success display -->
                    <div id="success-message" class="hidden bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded relative mb-4" role="alert">
                        <strong class="font-bold">Success:</strong>
                        <span id="success-text"></span>
                    </div>

                    <!-- Step 1: Email Verification -->
                    <div id="step1" class="step-content">
                        <div class="flex items-center mb-6">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-teal-700 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 12a4 4 0 10-8 0 4 4 0 008 0zm0 0v1.5a2.5 2.5 0 005 0V12a9 9 0 10-9 9m4.5-1.206a8.959 8.959 0 01-4.5 1.207" />
                            </svg>
                            <h2 class="text-2xl font-semibold">Verify Your Email</h2>
                        </div>
                        <p class="text-gray-600 mb-6">Enter your email address to begin the password reset process</p>
                        
                        <form id="email-form" class="space-y-6">
                            <div>
                                <label for="email" class="block text-sm font-medium text-gray-700 mb-1">Email Address</label>
                                <input type="email" id="email" name="email" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-teal-500" placeholder="egpap@pedaid.org" required>
                            </div>
                            
                            <button type="submit" id="verify-email-btn" class="w-full py-2 px-4 bg-teal-600 hover:bg-teal-700 text-white rounded-md font-medium transition duration-200">
                                Verify Email
                            </button>
                        </form>
                    </div>

                    <!-- Step 2: Phone Verification -->
                    <div id="step2" class="step-content hidden">
                        <div class="flex items-center mb-6">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-teal-700 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z" />
                            </svg>
                            <h2 class="text-2xl font-semibold">Verify Your Phone</h2>
                        </div>
                        <p class="text-gray-600 mb-6">Complete the masked phone number to verify your identity</p>
                        
                        <form id="phone-form" class="space-y-6">
                            <div>
                                <label for="phone" class="block text-sm font-medium text-gray-700 mb-1">Phone Number</label>
                                <div class="text-sm text-gray-500 mb-2">Your phone number: <span id="masked-phone" class="font-mono"></span></div>
                                <input type="tel" id="phone" name="phone" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-teal-500" placeholder="Enter the complete phone number" required>
                            </div>
                            
                            <button type="submit" id="verify-phone-btn" class="w-full py-2 px-4 bg-teal-600 hover:bg-teal-700 text-white rounded-md font-medium transition duration-200">
                                Verify Phone
                            </button>
                        </form>
                    </div>

                    <!-- Step 3: Password Reset -->
                    <div id="step3" class="step-content hidden">
                        <div class="flex items-center mb-6">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-teal-700 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z" />
                            </svg>
                            <h2 class="text-2xl font-semibold">Reset Your Password</h2>
                        </div>
                        <p class="text-gray-600 mb-6">Enter your new password and confirm it</p>
                        
                        <form id="password-form" class="space-y-6">
                            <div>
                                <label for="new-password" class="block text-sm font-medium text-gray-700 mb-1">New Password</label>
                                <input type="password" id="new-password" name="new-password" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-teal-500" required>
                            </div>
                            
                            <div>
                                <label for="confirm-password" class="block text-sm font-medium text-gray-700 mb-1">Confirm Password</label>
                                <input type="password" id="confirm-password" name="confirm-password" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-teal-500" required>
                            </div>
                            
                            <button type="submit" id="update-password-btn" class="w-full py-2 px-4 bg-amber-400 hover:bg-amber-500 text-white rounded-md font-medium transition duration-200">
                                Update Password
                            </button>
                        </form>
                    </div>

                    <!-- Success Step -->
                    <div id="success-step" class="step-content hidden text-center">
                        <div class="flex items-center justify-center mb-6">
                            <div class="bg-green-100 p-4 rounded-full">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 text-green-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                                </svg>
                            </div>
                        </div>
                        <h2 class="text-2xl font-semibold text-green-600 mb-4">Password Updated Successfully!</h2>
                        <p class="text-gray-600 mb-6">Your password has been reset. You can now sign in with your new password.</p>
                        <a href="/login" class="inline-block py-2 px-6 bg-teal-600 hover:bg-teal-700 text-white rounded-md font-medium transition duration-200">
                            Go to Sign In
                        </a>
                    </div>
                    
                    <div class="text-center mt-6">
                        <p class="text-gray-600">
                            Remember your password? 
                            <a href="/login" class="text-teal-700 hover:underline">Sign in</a>
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>

        const SystemUsers = JSON.parse('<%= raw @users.to_json %>');
        let currentStep = 1;
        let verifiedEmail = '';
        let actualPhone = '';

        // Utility functions
        function showError(message) {
            const errorDiv = document.getElementById('error-message');
            const errorText = document.getElementById('error-text');
            errorText.textContent = message;
            errorDiv.classList.remove('hidden');
            
            setTimeout(() => {
                errorDiv.classList.add('hidden');
            }, 5000);
        }

        function showSuccess(message) {
            const successDiv = document.getElementById('success-message');
            const successText = document.getElementById('success-text');
            successText.textContent = message;
            successDiv.classList.remove('hidden');
            
            setTimeout(() => {
                successDiv.classList.add('hidden');
            }, 3000);
        }

        function updateProgressIndicator(step) {
            // Reset all indicators
            for (let i = 1; i <= 3; i++) {
                const indicator = document.getElementById(`step${i}-indicator`);
                if (i <= step) {
                    indicator.classList.remove('bg-gray-300', 'text-gray-600');
                    indicator.classList.add('bg-teal-600', 'text-white');
                } else {
                    indicator.classList.remove('bg-teal-600', 'text-white');
                    indicator.classList.add('bg-gray-300', 'text-gray-600');
                }
            }
            
            // Update connectors
            const connector1 = document.getElementById('connector1');
            const connector2 = document.getElementById('connector2');
            
            if (step >= 2) {
                connector1.classList.remove('bg-gray-300');
                connector1.classList.add('bg-teal-600');
            }
            if (step >= 3) {
                connector2.classList.remove('bg-gray-300');
                connector2.classList.add('bg-teal-600');
            }
        }

        function showStep(step) {
            // Hiding all steps
            document.querySelectorAll('.step-content').forEach(el => {
                el.classList.add('hidden');
            });
            
            // Show current step
            if (step === 'success') {
                document.getElementById('success-step').classList.remove('hidden');
                updateProgressIndicator(3);
            } else {
                document.getElementById(`step${step}`).classList.remove('hidden');
                updateProgressIndicator(step);
            }
            
            currentStep = step;
        }

        function getEmailVerification(email) {
            return new Promise((resolve, reject) => {
                setTimeout(() => {
                    if (SystemUsers[email]) {
                        resolve({
                            success: true,
                            maskedPhone: SystemUsers[email].maskedPhone,
                            actualPhone: SystemUsers[email].phone
                        });
                    } else {
                        reject({ message: 'Email address not found in our records' });
                    }
                }, 1000);
            });
        }

        function getPhoneVerification(email, phone) {
            return new Promise((resolve, reject) => {
                setTimeout(() => {
                    if (SystemUsers[email] && SystemUsers[email].phone === phone) {
                        resolve({ success: true });
                    } else {
                        reject({ message: 'Phone number does not match our records' });
                    }
                }, 1000);
            });
        }

        async function getPasswordUpdate(email, password) {

             try {
                const response = await fetch('/update_password', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'Accept': 'application/json'
                    },
                    body: JSON.stringify({
                        email: email,
                        password: password
                    })
                });

                if (!response.ok) {
                    const errorData = await response.json();
                    console.log(errorData.message)
                    throw new Error(errorData.message || 'Failed to update password');
                }

                const data = await response.json();
                return data;
            } catch (error) {
                throw new Error(error.message || 'Network error occurred');
            }
        }

        // Event handlers
        document.getElementById('email-form').addEventListener('submit', async (e) => {
            e.preventDefault();
            
            const email = document.getElementById('email').value;
            const submitBtn = document.getElementById('verify-email-btn');
            
            submitBtn.textContent = 'Verifying...';
            submitBtn.disabled = true;
            
            try {
                const response = await getEmailVerification(email);
                verifiedEmail = email;
                actualPhone = response.actualPhone;
                
                document.getElementById('masked-phone').textContent = response.maskedPhone;
                showSuccess('Email verified! Please complete your phone number.');
                showStep(2);
                
            } catch (error) {
                showError(error.message);
            } finally {
                submitBtn.textContent = 'Verify Email';
                submitBtn.disabled = false;
            }
        });

        document.getElementById('phone-form').addEventListener('submit', async (e) => {
            e.preventDefault();
            
            const phone = document.getElementById('phone').value;
            const submitBtn = document.getElementById('verify-phone-btn');
            
            submitBtn.textContent = 'Verifying...';
            submitBtn.disabled = true;
            
            try {
                await getPhoneVerification(verifiedEmail, phone);
                showSuccess('Phone verified! You can now reset your password.');
                showStep(3);
                
            } catch (error) {
                showError(error.message);
            } finally {
                submitBtn.textContent = 'Verify Phone';
                submitBtn.disabled = false;
            }
        });

        document.getElementById('password-form').addEventListener('submit', async (e) => {
            e.preventDefault();
            
            const newPassword = document.getElementById('new-password').value;
            const confirmPassword = document.getElementById('confirm-password').value;
            const submitBtn = document.getElementById('update-password-btn');
            
            if (newPassword !== confirmPassword) {
                showError('Passwords do not match');
                return;
            }
            
            if (newPassword.length < 6) {
                showError('Password must be at least 6 characters long');
                return;
            }
            
            submitBtn.textContent = 'Updating...';
            submitBtn.disabled = true;
            
            try {
                await getPasswordUpdate(verifiedEmail, newPassword);
                showStep('success');
                
            } catch (error) {
                showError('Failed to update password. Please try again.');
            } finally {
                submitBtn.textContent = 'Update Password';
                submitBtn.disabled = false;
            }
        });

        // Initialize the form
        showStep(1);
    </script>
</body>
</html>