<div class="container mx-auto px-4 py-6">
  <h1 class="text-3xl font-medium text-teal-700 mb-8">Password Reset Dashboard</h1>

     <div class="container mx-auto px-4 mt-4">
      
              <div class="bg-red-100 text-red-800 p-4 rounded-md mb-4" id="error-messages" style="display: none;">
                <span id="error-message-text"></span>
              </div>
            
            </div>
            
            <div class="grid grid-cols-1 lg:grid-cols-3 gap-6">
            <!-- Left column - Generate Password Reset Code -->
            <div class="lg:col-span-2">
              <div class="bg-white shadow-md rounded-lg p-6 mb-6">
              <h2 class="text-xl font-semibold mb-4">Generate Password Reset Code</h2>
              <%= form_with(url: password_resets_path, id: "password-reset-form", local: true, class: "space-y-4") do |f| %>

                <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div>
                  <%= f.label :username, "Username", class: "block text-sm font-medium text-gray-700 mb-1" %>
                  <%= f.text_field :username,
                    id: "username",
                    class: "w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-teal-500", 
                    placeholder: "username" %>
                </div>
                 
               <div class="relative" data-controller="location-select">
  <%= f.label :location, "Location", class: "block text-sm font-medium text-gray-700 mb-1" %>
  <%= f.hidden_field :location_id, id: "location_id", value: nil %>
  
  <button type="button"
          data-location-select-target="button"
          data-action="click->location-select#toggleMenu"
          class="inline-flex justify-between w-full px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-100 focus:ring-teal-500">
    <span class="mr-2">Select Location</span>
    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
      <path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd" />
    </svg>
  </button>

  <div data-location-select-target="menu"
       class="hidden absolute z-50 bottom-full mb-1 w-full rounded-md bg-white shadow-lg">
    <input type="text"
           data-action="input->location-select#filterLocations"
           class="block w-full px-4 py-2 text-gray-800 border rounded-md border-gray-300 focus:outline-none"
           placeholder="Search locations"
           autocomplete="off">

    <div class="max-h-60 overflow-y-auto">
      <% Location.order(:name).each do |location| %>
        <a href="#"
           data-action="click->location-select#selectLocation"
           data-location-id="<%= location.id %>"
           class="block px-4 py-2 text-gray-700 hover:bg-gray-100 active:bg-blue-100 cursor-pointer rounded-md">
          <%= location.name %>
          <% if location.description.present? %>
            <span class="block text-xs text-gray-500"><%= location.description %></span>
          <% end %>
        </a>
      <% end %>
    </div>
  </div>
</div>
                </div>

                <div class="grid grid-cols-2 gap-4">
                <div>
                  <%= f.label :first_name, class: "block text-sm font-medium text-gray-700 mb-1" %>
                  <%= f.text_field :first_name, 
                    id: "first_name",
                    class: "w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-teal-500", 
                    placeholder: "Given Name" %>
                </div>
                <div>
                  <%= f.label :last_name, class: "block text-sm font-medium text-gray-700 mb-1" %>
                  <%= f.text_field :last_name, 
                    id: "last_name",
                    class: "w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-teal-500", 
                    placeholder: "Lastname" %>
                </div>
                </div>

               <div class="mt-6">

               <div data-controller="phone-input">
         <%= f.label :Whatsapp_number, class: "block text-sm font-medium text-gray-700 mb-1" %>
           <div class="flex w-full">
               <div class="relative w-full">
                      <%= f.telephone_field :phone_number, 
              id: "phone",
              data: { phone_input_target: "phone" },
           class: "w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-teal-500", 
          value: @user&.phone&.gsub('+265', ''),
           size: "100" %>
            <%= f.hidden_field :full_phone, 
              id: "full_phone", 
              data: { phone_input_target: "fullPhone" } %>
           <div class="text-red-800" 
             id="phone-error" 
             data-phone-input-target="error" 
             style="display: none;">
                  </div>
               </div>
             </div>
           </div>
                 
               </div>

          <div class="text-center mt-6">
            
          <%= button_tag type: "submit", class: "w-full py-2 px-4 bg-amber-300 hover:bg-amber-400 rounded-md font-medium transition duration-200 inline-flex items-center justify-center" do %>
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2 inline-block" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
              <path stroke-linecap="round" stroke-linejoin="round" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15" />
            </svg>
            Generate Code
          <% end %>

          </div>
        <% end %>
      </div>
    </div>
    
    <!-- Right column - System Overview and Quick Tips -->
    <div>
      <div class="bg-white rounded-lg shadow p-6 mb-6">
        <h2 class="text-xl font-semibold text-teal-700 mb-4">System Overview</h2>
        
        <div class="space-y-4">
          <div class="flex justify-between items-center">
            <span class="text-gray-600">Total Resets Today</span>
            <span class="text-xl font-semibold"><%= @total_resets_today || 12 %></span>
          </div>
          
          <div class="flex justify-between items-center">
            <span class="text-gray-600">Active Reset Codes</span>
            <span class="text-xl font-semibold"><%= @active_resets || 8 %></span>
          </div>
          
          <div class="flex justify-between items-center">
            <span class="text-gray-600">Expired Codes (24h)</span>
            <span class="text-xl font-semibold"><%= @expired_resets || 4 %></span>
          </div>
        </div>
      </div>
      
      <div class="bg-white rounded-lg shadow p-6">
        <h2 class="text-xl font-semibold text-teal-700 mb-4">Quick Tips</h2>
        
        <ul class="list-disc pl-5 space-y-2 text-gray-700">
          <li>Verify user identity before generating reset codes</li>
          <li>Reset codes expire after 24 hours</li>
          <li>Send reset codes via secure channels only</li>
          <li>Record all password reset requests for audit purposes</li>
        </ul>
      </div>
    </div>
  </div>
  
  <!-- Recent Transactions -->
  <div class="mt-8">
    <h2 class="text-2xl font-medium text-teal-700 mb-4">Recent Transactions</h2>
    
    <div class="bg-white rounded-lg shadow overflow-hidden">
      <table class="min-w-full divide-y divide-gray-200">
        <thead class="bg-gray-50">
          <tr>
            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Generated Code</th>
            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">User</th>
            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Created</th>
            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Expires</th>
            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
          </tr>
        </thead>
        <tbody class="bg-white divide-y divide-gray-200">
          <% if @recent_resets && @recent_resets.any? %>
            <% @recent_resets.each do |reset| %>
              <tr>
                <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">
                  <%= reset.reset_code %>
                </td>


                <td class="px-6 py-4 whitespace-nowrap">
                      <%= link_to edit_user_path(reset.user), class: "text-teal-600 hover:text-teal-800" do %>
                        <div class="text-sm font-medium text-gray-900"><%= reset.user.full_name %></div>
                        <div class="text-sm text-teal-600">@<%= reset.user.username %>
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 inline-block ml-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z" />
                      </svg>
                      </div>
                      <% end %>
                </td>

                         <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                          <%= reset.created_at.strftime("%m/%d/%Y, %I:%M:%S %p") %>
                          </td>
                          <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                            <%= reset.expires_at.strftime("%m/%d/%Y, %I:%M:%S %p") %>
                          </td>
                          <td class="px-6 py-4 whitespace-nowrap">
                            <% if reset.status == "active" && !reset.expired? %>
                            <span class="px-2 py-1 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800">
                              Active
                            </span>
                            <% elsif reset.status == "used" %>
                            <span class="px-2 py-1 inline-flex text-xs leading-5 font-semibold rounded-full bg-blue-100 text-blue-800">
                              Used
                            </span>
                            <% else %>
                            <span class="px-2 py-1 inline-flex text-xs leading-5 font-semibold rounded-full bg-red-100 text-red-800">
                              Expired
                            </span>
                            <% end %>
                          </td>
                          <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                            <%= link_to "View", password_reset_path(reset), class: "text-teal-600 hover:text-teal-800" %>
                          </td>
                          <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                            <button onclick="voidResetCode('<%= reset.id %>')"
                              class="text-red-600 hover:text-red-800">
                              Void
                            </button>
                          </td>
                          </tr>
                        <% end %>
                        <% else %>
                        <tr>
                          <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">TX-1234</td>
                          <td class="px-6 py-4 whitespace-nowrap">
                          <div class="text-sm font-medium text-gray-900">Patrick Mvuma</div>
                          <div class="text-sm text-gray-500">@pmvuma</div>
                          </td>
                          <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">5/6/2025, 12:30:00 PM</td>
                          <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">5/6/2025, 12:30:00 PM</td>
                          <td class="px-6 py-4 whitespace-nowrap">
                          <span class="px-2 py-1 inline-flex text-xs leading-5 font-semibold rounded-full bg-red-100 text-red-800">
                            Expired
                          </span>
                          </td>
                          <td class="px-6 py-4 whitespace-nowrap text-sm font-medium relative">
                          <div class="dropdown">
                            <button class="text-gray-500 hover:text-gray-700 dropdown-toggle" onclick="toggleDropdown(this)">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-current" viewBox="0 0 20 20" fill="none" stroke="currentColor">
                      <path d="M6 10a2 2 0 11-4 0 2 2 0 014 0zM12 10a2 2 0 11-4 0 2 2 0 014 0zM16 12a2 2 0 100-4 2 2 0 000 4z" />
                    </svg>
                  </button>
                  <div class="dropdown-menu hidden absolute right-0 z-10 mt-2 w-48 origin-top-right rounded-md bg-white shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none">
                    <div class="py-1">
                      <a href="#" class="text-gray-700 block px-4 py-2 text-sm hover:bg-gray-100">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-2 inline text-current" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />
                        </svg>
                        View Details
                      </a>
                    </div>
                  </div>
                </div>
              </td>
            </tr>
            <tr>
              <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">TX-1235</td>
              <td class="px-6 py-4 whitespace-nowrap">
                <div class="text-sm font-medium text-gray-900">Hopeson Gausi</div>
                <div class="text-sm text-gray-500">@hopeson</div>
              </td>
              <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">5/4/2023, 11:15:00 AM</td>
              <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">5/4/2023, 11:15:00 AM</td>
              <td class="px-6 py-4 whitespace-nowrap">
                <span class="px-2 py-1 inline-flex text-xs leading-5 font-semibold rounded-full bg-red-100 text-red-800">
                Expired
                </span>
              </td>
              <td class="px-6 py-4 whitespace-nowrap text-sm font-medium relative">
                <div class="dropdown">
                  <button class="text-gray-500 hover:text-gray-700 dropdown-toggle" onclick="toggleDropdown(this)">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-current" viewBox="0 0 20 20" fill="none" stroke="currentColor">
                      <path d="M6 10a2 2 0 11-4 0 2 2 0 014 0zM12 10a2 2 0 11-4 0 2 2 0 014 0zM16 12a2 2 0 100-4 2 2 0 000 4z" />
                    </svg>
                  </button>
                  <div class="dropdown-menu hidden absolute right-0 z-10 mt-2 w-48 origin-top-right rounded-md bg-white shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none">
                    <div class="py-1">
                      <a href="#" class="text-gray-700 block px-4 py-2 text-sm hover:bg-gray-100">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-2 inline text-current" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />
                        </svg>
                        View Details
                      </a>
                    </div>
                  </div>
                </div>
              </td>
            </tr>
          <% end %>
        </tbody>
      </table>
    </div>
    
    <div class="mt-4 flex justify-center">
      <%= link_to password_resets_path, class: "inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-teal-600 hover:bg-teal-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500" do %>
        Show All Transactions
        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 ml-2 text-current" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 5l7 7-7 7M5 5l7 7-7 7" />
        </svg>
      <% end %>
    </div>
  </div>
</div>
<% content_for :page_scripts do %>
  <script>
    // Initialize all functionality when DOM is ready
    document.addEventListener('DOMContentLoaded', function() {
      // Initialize location dropdown
      initializeLocationDropdown();
      
      // Initialize phone input
      initializePhoneInput();
      
      // Initialize form validation
      initializeFormValidation();
      
      // Initialize username check
      initializeUsernameCheck();
    });

    // Location dropdown functionality
    function initializeLocationDropdown() {
      const locationButton = document.getElementById('location-button');
      const locationMenu = document.getElementById('location-menu');
      const locationSearch = document.getElementById('location-search');
      
      if (!locationButton || !locationMenu || !locationSearch) return;

      // Toggle menu when button is clicked
      locationButton.addEventListener('click', function(e) {
        e.preventDefault();
        e.stopPropagation();
        locationMenu.classList.toggle('hidden');
      });

      // Close menu when clicking outside
      document.addEventListener('click', function(e) {
        if (!locationButton.contains(e.target) && !locationMenu.contains(e.target)) {
          locationMenu.classList.add('hidden');
        }
      });

      // Prevent menu from closing when clicking inside search
      locationSearch.addEventListener('click', function(e) {
        e.stopPropagation();
      });

      // Filter locations when searching
      locationSearch.addEventListener('input', function(e) {
        const searchText = e.target.value.toLowerCase();
        const locationLinks = locationMenu.getElementsByTagName('a');
        
        Array.from(locationLinks).forEach(link => {
          const locationName = link.textContent.toLowerCase();
          link.style.display = locationName.includes(searchText) ? '' : 'none';
        });
      });
    }

    // Select location function (keep this outside as it's called from HTML)
    function selectLocation(event, locationId, locationName) {
      event.preventDefault();
      event.stopPropagation();
      
      // Update hidden input and button text
      document.getElementById('location_id').value = locationId;
      document.querySelector('#location-button span').textContent = locationName;
      
      // Hide the menu
      document.getElementById('location-menu').classList.add('hidden');

      // Clear any existing error messages
      document.getElementById('error-messages').style.display = 'none';
    }

    // Phone input initialization
    function initializePhoneInput() {
      const phoneInput = document.querySelector("#phone");
      const fullPhoneField = document.querySelector("#full_phone");
      
      if (phoneInput) {
        const iti = window.intlTelInput(phoneInput, {
          utilsScript: "https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.19/js/utils.js",
          initialCountry: "mw", // Set Malawi as default
          preferredCountries: ["mw", "za", "zm", "zw", "tz"], // Preferred countries at the top
          separateDialCode: true,
          autoPlaceholder: "polite"
        });
        
        // Update hidden input with full phone number on input change
        phoneInput.addEventListener('input', updateFullPhone);
        phoneInput.addEventListener('countrychange', updateFullPhone);
        
        function updateFullPhone() {
          if (phoneInput.value) {
            fullPhoneField.value = iti.getNumber(); // E.164 format: +265999107725 
          }
        }
        
        // Initialize with default value
        setTimeout(updateFullPhone, 100);
      }
    }

    // Form validation initialization
    function initializeFormValidation() {
      const form = document.getElementById("password-reset-form");
      const username = document.getElementById("username");
      const locationId = document.getElementById("location_id");
      const firstName = document.getElementById("first_name");
      const lastName = document.getElementById("last_name");
      const phoneInput = document.getElementById("phone");

      form.addEventListener("submit", function (e) {
        let errors = [];

        if (!username.value.trim()) {
          document.getElementById('error-messages').style.display = 'block';
          document.getElementById('error-message-text').textContent = "Username is required.";
          e.preventDefault();
          return;
        }

        if (!locationId.value || locationId.value === "null") {
          document.getElementById('error-messages').style.display = 'block';
          document.getElementById('error-message-text').textContent = "Please select a location.";
          e.preventDefault();
          return;
        }

        if (!firstName.value.trim()) {
          document.getElementById('error-messages').style.display = 'block';
          document.getElementById('error-message-text').textContent = "First name is required.";
          e.preventDefault();
          return;
        }

        if (!lastName.value.trim()) {
          document.getElementById('error-messages').style.display = 'block';
          document.getElementById('error-message-text').textContent = "Last name is required.";
          e.preventDefault();
          return;
        }
        if(!phoneInput.value.trim()) {
          document.getElementById('error-messages').style.display = 'block';
          document.getElementById('error-message-text').textContent = "Phone number is required.";
          e.preventDefault();
          return;
        }
        
      });
    }

    // Username check initialization
    function initializeUsernameCheck() {
      const userInput = document.getElementById('username');
      userInput.addEventListener('blur', function() {
        const username = userInput.value;
        // Perform an AJAX request to check if the username exists
        fetch(`/check_username?username=${username}`)
          .then(response => response.json())
          .then(data => {
            const existingUserDisplay = document.querySelector('.existing-user-display');
            if (existingUserDisplay) {
              existingUserDisplay.remove();
            }
            // If the username exists, display the linked user
            if (data.firstname) {
              document.getElementById('first_name').value = data.firstname;
              document.getElementById('last_name').value = data.lastname;
              document.getElementById('phone').value = data.phone;
              document.getElementById('full_phone').value = `+265${data.phone}`;
            }
          });
        
        });
    }

    // Dropdown toggle function
    window.toggleDropdown = function(button) {
      const dropdown = button.nextElementSibling;
      dropdown.classList.toggle('hidden');
      
      // Close other dropdowns
      document.querySelectorAll('.dropdown-menu').forEach(menu => {
        if (menu !== dropdown && !menu.classList.contains('hidden')) {
          menu.classList.add('hidden');
        }
      });
      
      // Close dropdown when clicking outside
      document.addEventListener('click', function closeDropdown(e) {
        if (!button.contains(e.target) && !dropdown.contains(e.target)) {
          dropdown.classList.add('hidden');
          document.removeEventListener('click', closeDropdown);
        }
      });
    };

    // CSRF token setup for AJAX requests
    const token = document.querySelector('meta[name="csrf-token"]')?.getAttribute('content');
    
    // Function to void a reset code
    function voidResetCode(resetId) {
      if (!confirm('Are you sure you want to void this reset code?')) {
        return;
      }

      fetch(`/password_resets/${resetId}`, {
        method: 'DELETE',
        headers: {
          'X-CSRF-Token': token,
          'Content-Type': 'application/json',
          'Accept': 'application/json'
        }
      })
      .then(response => {
        if (!response.ok) {
          throw new Error('Network response was not ok');
        }
        // Remove the row from the table or refresh the page
        const row = document.querySelector(`button[onclick="voidResetCode('${resetId}')"]`).closest('tr');
        row.remove();
      })
      .catch(error => {
        console.error('Error:', error);
        alert('Failed to void the reset code. Please try again.');
      });
    }
  </script>

<% end %>