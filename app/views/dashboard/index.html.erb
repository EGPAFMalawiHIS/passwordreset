<div class="container mx-auto px-4 py-6">
  <h1 class="text-3xl font-medium text-teal-700 mb-8">Password Reset Dashboard</h1>
  
  <div class="grid grid-cols-1 lg:grid-cols-3 gap-6">
    <!-- Left column - Generate Password Reset Code -->
    <div class="lg:col-span-2">
      <div class="bg-white shadow-md rounded-lg p-6 mb-6">
        <h2 class="text-xl font-semibold mb-4">Generate Password Reset Code</h2>
        <%= form_with(url: password_resets_path, local: true, class: "space-y-4") do |f| %>

          <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div>
              <%= f.label :username, "Username", class: "block text-sm font-medium text-gray-700 mb-1" %>
              <%= f.text_field :username, 
                  class: "w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-teal-500", 
                  placeholder: "username" %>
            </div>
            
            <div data-controller="location-select" class="relative group">

              <%= f.label :location, "Location", 
                   class: "block text-sm font-medium text-gray-700 mb-1" %>
              <%= f.hidden_field :location_id, value: nil %>
              
              <button 
                type="button" 
                data-location-select-target="button"
                class="inline-flex justify-center w-full px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-100 focus:ring-teal-500"
              >
                <span class="mr-2">Select Location</span>
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 ml-2 -mr-1 text-current" viewBox="0 0 20 20" fill="none" stroke="currentColor" aria-hidden="true">
                  <path fill-rule="evenodd" d="M6.293 9.293a1 1 0 011.414 0L10 11.586l2.293-2.293a1 1 0 111.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z" clip-rule="evenodd" />
                </svg>
              </button>

              <div 
                data-location-select-target="menu"
                class="hidden absolute right-0 mt-2 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 p-1 space-y-1 z-50 w-full"
              >
                <input 
                  type="text" 
                  data-location-select-target="searchInput"
                  class="block w-full px-4 py-2 text-gray-800 border rounded-md border-gray-300 focus:outline-none" 
                  placeholder="Search locations" 
                  autocomplete="off"
                >

                <div class="max-h-60 overflow-y-auto">
                  <% Location.order(:name).each do |location| %>
                    <a 
                      href="#" 
                      data-action="click->location-select#selectLocation"
                      data-location-id="<%= location.id %>"
                      class="block px-4 py-2 text-gray-700 hover:bg-gray-100 active:bg-blue-100 cursor-pointer rounded-md"
                    >
                      <%= location.name %>
                      <% if location.description.present? %>
                        <span class="block text-xs text-gray-500"><%= location.description %></span>
                      <% end %>
                    </a>
                  <% end %>
                </div>
              </div>
            </div>
          </div>
          <div class="grid grid-cols-2 gap-4">
            <div>
              <%= f.label :first_name, class: "block text-sm font-medium text-gray-700 mb-1" %>
              <%= f.text_field :first_name, 
                      id: "first_name",
                  class: "w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-teal-500", 
                  placeholder: "Given Name" %>
            </div>
            <div>
              <%= f.label :last_name, class: "block text-sm font-medium text-gray-700 mb-1" %>
              <%= f.text_field :last_name, 
                  id: "last_name",
                  class: "w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-teal-500", 
                  placeholder: "Lastname" %>
            </div>
          </div>

         <div class="mt-6">
           <div>
             <%= f.label :Whatsapp_number, class: "block text-sm font-medium text-gray-700 mb-1" %>
             <div class="flex w-full">
               <div class="relative w-full">
                 <%= f.telephone_field :phone_number, 
                        id: "phone",
                     class: "w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-teal-500", 
                     placeholder: "999107700",
                     size: "100" %>
                 <%= f.hidden_field :full_phone, id: "full_phone" %>
                 
                 <% # Only check for existing user if phone is present %>
                 <% if f.object.respond_to?(:phone_number) && f.object.phone_number.present? %>
                   <% existing_user = User.find_by(phone: f.object.phone_number) %>
                   <% if existing_user %>
                     <div class="absolute inset-y-0 right-0 pr-3 flex items-center text-sm text-gray-500">
                       Linked to: <%= existing_user.username %>
                     </div>
                   <% end %>
                 <% end %>
               </div>
             </div>
           </div>
         </div>

          <div class="text-center mt-6">
            
          <%= button_tag type: "submit", class: "w-full py-2 px-4 bg-amber-300 hover:bg-amber-400 rounded-md font-medium transition duration-200 inline-flex items-center justify-center" do %>
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2 inline-block" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
              <path stroke-linecap="round" stroke-linejoin="round" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15" />
            </svg>
            Generate Code
          <% end %>

          </div>
        <% end %>
      </div>
    </div>
    
    <!-- Right column - System Overview and Quick Tips -->
    <div>
      <div class="bg-white rounded-lg shadow p-6 mb-6">
        <h2 class="text-xl font-semibold text-teal-700 mb-4">System Overview</h2>
        
        <div class="space-y-4">
          <div class="flex justify-between items-center">
            <span class="text-gray-600">Total Resets Today</span>
            <span class="text-xl font-semibold"><%= @total_resets_today || 12 %></span>
          </div>
          
          <div class="flex justify-between items-center">
            <span class="text-gray-600">Active Reset Codes</span>
            <span class="text-xl font-semibold"><%= @active_resets || 8 %></span>
          </div>
          
          <div class="flex justify-between items-center">
            <span class="text-gray-600">Expired Codes (24h)</span>
            <span class="text-xl font-semibold"><%= @expired_resets || 4 %></span>
          </div>
        </div>
      </div>
      
      <div class="bg-white rounded-lg shadow p-6">
        <h2 class="text-xl font-semibold text-teal-700 mb-4">Quick Tips</h2>
        
        <ul class="list-disc pl-5 space-y-2 text-gray-700">
          <li>Verify user identity before generating reset codes</li>
          <li>Reset codes expire after 24 hours</li>
          <li>Send reset codes via secure channels only</li>
          <li>Record all password reset requests for audit purposes</li>
        </ul>
      </div>
    </div>
  </div>
  
  <!-- Recent Transactions -->
  <div class="mt-8">
    <h2 class="text-2xl font-medium text-teal-700 mb-4">Recent Transactions</h2>
    
    <div class="bg-white rounded-lg shadow overflow-hidden">
      <table class="min-w-full divide-y divide-gray-200">
        <thead class="bg-gray-50">
          <tr>
            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Generated Code</th>
            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">User</th>
            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Created</th>
            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Expires</th>
            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
          </tr>
        </thead>
        <tbody class="bg-white divide-y divide-gray-200">
          <% if @recent_resets && @recent_resets.any? %>
            <% @recent_resets.each do |reset| %>
              <tr>
                <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">
                  <%= reset.reset_code %>
                </td>
                <td class="px-6 py-4 whitespace-nowrap">
                  <div class="text-sm font-medium text-gray-900"><%= reset.user.full_name %></div>
                  <div class="text-sm text-gray-500">@<%= reset.user.username %></div>
                </td>
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                  <%= reset.created_at.strftime("%m/%d/%Y, %I:%M:%S %p") %>
                </td>
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                  <%= reset.expires_at.strftime("%m/%d/%Y, %I:%M:%S %p") %>
                </td>
                <td class="px-6 py-4 whitespace-nowrap">
                  <% if reset.status == "active" && !reset.expired? %>
                    <span class="px-2 py-1 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800">
                      Active
                    </span>
                  <% elsif reset.status == "used" %>
                    <span class="px-2 py-1 inline-flex text-xs leading-5 font-semibold rounded-full bg-blue-100 text-blue-800">
                      Used
                    </span>
                  <% else %>
                    <span class="px-2 py-1 inline-flex text-xs leading-5 font-semibold rounded-full bg-red-100 text-red-800">
                      Expired
                    </span>
                  <% end %>
                </td>
                <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                  <%= link_to "View", password_reset_path(reset), class: "text-teal-600 hover:text-teal-800" %>
                </td>
              </tr>
            <% end %>
          <% else %>
            <!-- Sample data for display -->
            <tr>
              <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">TX-1234</td>
              <td class="px-6 py-4 whitespace-nowrap">
                <div class="text-sm font-medium text-gray-900">John Smith</div>
                <div class="text-sm text-gray-500">@jsmith</div>
              </td>
              <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">6/15/2023, 12:30:00 PM</td>
              <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">6/16/2023, 12:30:00 PM</td>
              <td class="px-6 py-4 whitespace-nowrap">
                <span class="px-2 py-1 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800">
                  Active
                </span>
              </td>
              <td class="px-6 py-4 whitespace-nowrap text-sm font-medium relative">
                <div class="dropdown">
                  <button class="text-gray-500 hover:text-gray-700 dropdown-toggle" onclick="toggleDropdown(this)">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-current" viewBox="0 0 20 20" fill="none" stroke="currentColor">
                      <path d="M6 10a2 2 0 11-4 0 2 2 0 014 0zM12 10a2 2 0 11-4 0 2 2 0 014 0zM16 12a2 2 0 100-4 2 2 0 000 4z" />
                    </svg>
                  </button>
                  <div class="dropdown-menu hidden absolute right-0 z-10 mt-2 w-48 origin-top-right rounded-md bg-white shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none">
                    <div class="py-1">
                      <a href="#" class="text-gray-700 block px-4 py-2 text-sm hover:bg-gray-100">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-2 inline text-current" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />
                        </svg>
                        View Details
                      </a>
                    </div>
                  </div>
                </div>
              </td>
            </tr>
            <tr>
              <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">TX-1235</td>
              <td class="px-6 py-4 whitespace-nowrap">
                <div class="text-sm font-medium text-gray-900">Mary Johnson</div>
                <div class="text-sm text-gray-500">@mjohnson</div>
              </td>
              <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">6/15/2023, 11:15:00 AM</td>
              <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">6/16/2023, 11:15:00 AM</td>
              <td class="px-6 py-4 whitespace-nowrap">
                <span class="px-2 py-1 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800">
                  Active
                </span>
              </td>
              <td class="px-6 py-4 whitespace-nowrap text-sm font-medium relative">
                <div class="dropdown">
                  <button class="text-gray-500 hover:text-gray-700 dropdown-toggle" onclick="toggleDropdown(this)">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-current" viewBox="0 0 20 20" fill="none" stroke="currentColor">
                      <path d="M6 10a2 2 0 11-4 0 2 2 0 014 0zM12 10a2 2 0 11-4 0 2 2 0 014 0zM16 12a2 2 0 100-4 2 2 0 000 4z" />
                    </svg>
                  </button>
                  <div class="dropdown-menu hidden absolute right-0 z-10 mt-2 w-48 origin-top-right rounded-md bg-white shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none">
                    <div class="py-1">
                      <a href="#" class="text-gray-700 block px-4 py-2 text-sm hover:bg-gray-100">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-2 inline text-current" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />
                        </svg>
                        View Details
                      </a>
                    </div>
                  </div>
                </div>
              </td>
            </tr>
          <% end %>
        </tbody>
      </table>
    </div>
    
    <div class="mt-4 flex justify-center">
      <%= link_to password_resets_path, class: "inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-teal-600 hover:bg-teal-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500" do %>
        Show All Transactions
        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 ml-2 text-current" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 5l7 7-7 7M5 5l7 7-7 7" />
        </svg>
      <% end %>
    </div>
  </div>
</div>
<% content_for :page_scripts do %>
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      // Initialize the phone input
      const phoneInput = document.querySelector("#phone");
      const fullPhoneField = document.querySelector("#full_phone");
      
      if (phoneInput) {
        const iti = window.intlTelInput(phoneInput, {
          utilsScript: "https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.19/js/utils.js",
          initialCountry: "mw", // Set Malawi as default
          preferredCountries: ["mw", "za", "zm", "zw", "tz"], // Preferred countries at the top
          separateDialCode: true,
          autoPlaceholder: "polite"
        });
        
        // Update hidden input with full phone number on input change
        phoneInput.addEventListener('input', updateFullPhone);
        phoneInput.addEventListener('countrychange', updateFullPhone);
        
        function updateFullPhone() {
          if (phoneInput.value) {
            fullPhoneField.value = iti.getNumber(); // E.164 format: +265999107725 
          }
        }
        
        // Initialize with default value
        setTimeout(updateFullPhone, 100);
      }
      
      // Dropdown toggle function
      window.toggleDropdown = function(button) {
        const dropdown = button.nextElementSibling;
        dropdown.classList.toggle('hidden');
        
        // Close other dropdowns
        document.querySelectorAll('.dropdown-menu').forEach(menu => {
          if (menu !== dropdown && !menu.classList.contains('hidden')) {
            menu.classList.add('hidden');
          }
        });
        
        // Close dropdown when clicking outside
        document.addEventListener('click', function closeDropdown(e) {
          if (!button.contains(e.target) && !dropdown.contains(e.target)) {
            dropdown.classList.add('hidden');
            document.removeEventListener('click', closeDropdown);
          }
        });
      };
    });
  </script>
  <script>
  document.addEventListener('DOMContentLoaded', function() {
    const phoneInput = document.getElementById('phone');
    const fullPhoneField = document.getElementById('full_phone');
    
    const iti = window.intlTelInput(phoneInput, {
      utilsScript: "https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.19/js/utils.js",
      initialCountry: "mw", // Set Malawi as default
      preferredCountries: ["mw", "za", "zm", "zw", "tz"], // Preferred countries at the top
      separateDialCode: true,
      autoPlaceholder: "polite"
    });
    
    // Update hidden input with full phone number on input change
    phoneInput.addEventListener('input', updateFullPhone);
    phoneInput.addEventListener('countrychange', updateFullPhone);
    
    function updateFullPhone() {
      if (phoneInput.value) {
        fullPhoneField.value = iti.getNumber(); // E.164 format: +265999107724
        
        // AJAX call to check if phone exists (optional enhancement)
        fetch(`/check_phone?phone=${fullPhoneField.value}`)
          .then(response => response.json())
          .then(data => {
            const existingUserDisplay = document.querySelector('.existing-user-display');
            if (existingUserDisplay) {
              existingUserDisplay.remove();
            }
            
            if (data.username) {
              const userDisplay = document.createElement('div');
              userDisplay.className = 'existing-user-display absolute inset-y-0 right-0 pr-3 flex items-center text-sm text-gray-500';
              userDisplay.textContent = `Linked to: ${data.username}`;
              phoneInput.parentElement.appendChild(userDisplay);
            }
          });
      }
    }
  });
</script>
<script>
  document.addEventListener('DOMContentLoaded', function() {

     const userInput = document.getElementById('username');
     userInput.addEventListener('blur', function() {
      const username = userInput.value;
      // Perform an AJAX request to check if the username exists
      fetch(`/check_username?username=${username}`)
        .then(response => response.json())
        .then(data => {
          const existingUserDisplay = document.querySelector('.existing-user-display');
          if (existingUserDisplay) {
            existingUserDisplay.remove();
          }
          // If the username exists, display the linked user
          if (data.firstname) {
            document.getElementById('first_name').value = data.firstname;
            document.getElementById('last_name').value = data.lastname;
            document.getElementById('phone').value = data.phone;
          }
        });
      
      });
});
</script>
<% end %>